[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]] # カーソル位置のコンテキストのftを判定するライブラリ
repo = 'Shougo/context_filetype.vim'

[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['nvim-yarp', 'roxma/vim-hug-neovim-rpc']
hook_add = '''
  "Define mappings
  autocmd FileType denite call s:denite_my_settings()
  function! s:denite_my_settings() abort
    nnoremap <silent><buffer><expr> <CR>
    \ denite#do_map('do_action')
    nnoremap <silent><buffer><expr> d
    \ denite#do_map('do_action', 'delete')
    nnoremap <silent><buffer><expr> p
    \ denite#do_map('do_action', 'preview')
    nnoremap <silent><buffer><expr> q
    \ denite#do_map('quit')
    nnoremap <silent><buffer><expr> i
    \ denite#do_map('open_filter_buffer')
    nnoremap <silent><buffer><expr> <Space>
    \ denite#do_map('toggle_select').'j'
  endfunction
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  let g:NERDTreeShowHidden = 1
'''

[[plugins]] # カラースキーマ
repo = 'jonathanfilip/vim-lucius'
hook_add = '''
  set background=dark
  " colorscheme 設定は source 後に行う必要があるので VimEnter で行う。
  " 但し Colorscheme イベントの発生が抑制されないよう nented を付ける。
  "  au MyAutoCmd VimEnter * nested colorscheme hybrid
    colorscheme lucius
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline-themes']
hook_add = '''   
  set laststatus=2
  let g:airline_theme = 'deus'
  let g:airline_powerline_fonts = 1
  let g:airline#extensions#tabline#enabled = 1
  let g:airline#extensions#tabline#buffer_idx_mode = 1
  let g:airline#extensions#virtualenv#enabled = 1
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if dein#util#_is_windows()
      let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
      let cmd = 'make -f make_cygwin.mak'
      elseif executable('gmake')
      let cmd = 'gmake'
      else
      let cmd = 'make'
      endif
      let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  call deoplete#custom#option('enable_smart_case', 1)
  inoremap <expr><TAB> pumvisible() ? "\<C-N>" : "\<TAB>"
'''

[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
  call defx#custom#option('_', {
      \ 'columns': 'indent:git:icons:filename',
      \ 'show_ignored_files': 1,
      \ })
  
  let g:defx_icons_enable_syntax_highlight = 1
  let g:defx_icons_column_length = 2
  
  autocmd FileType defx call s:defx_my_settings()
      function! s:defx_my_settings() abort
        nnoremap <silent><buffer><expr> <CR>
       \ defx#do_action('open')
        " 【o】 ファイルを開く
        nnoremap <silent><buffer><expr> o
        \ defx#do_action('open')
        " 【s】 ウィンドウを水平分割してファイルを開く
        nnoremap <silent><buffer><expr> s
        \ defx#do_action('open', 'split')
        " 【v】 ウィンドウを垂直分割してファイルを開く
        nnoremap <silent><buffer><expr> v
        \ defx#do_action('open', 'vsplit')
        " 【c】 ファイルをコピーする
        nnoremap <silent><buffer><expr> c
        \ defx#do_action('copy')
        " 【m】 ファイルを移動する
        nnoremap <silent><buffer><expr> m
        \ defx#do_action('move')
        " 【p】 ファイルを貼り付ける
        nnoremap <silent><buffer><expr> p
        \ defx#do_action('paste')
        " 【n】 新しいファイルを作成する
        nnoremap <silent><buffer><expr> n
        \ defx#do_action('new_file')
        " 【N】 新しいディレクトリを作成する
        nnoremap <silent><buffer><expr> N
        \ defx#do_action('new_directory')
        " 【d】 ファイルを削除する
        nnoremap <silent><buffer><expr> d
        \ defx#do_action('remove')
        " 【r】 ファイル名を変更する
        nnoremap <silent><buffer><expr> r
        \ defx#do_action('rename')
        " 【t】 ツリーを表示/非表示する
        nnoremap <silent><buffer><expr> t
        \ defx#do_action('open_or_close_tree')
        " 【x】 ファイルを実行する
        nnoremap <silent><buffer><expr> x
        \ defx#do_action('execute_system')
        " 【yy】 ファイル/ディレクトリのパスをコピーする
        nnoremap <silent><buffer><expr> yy
        \ defx#do_action('yank_path')
        nnoremap <silent><buffer><expr> .
        " 【.】 隠しファイルを表示/非表示する
        \ defx#do_action('toggle_ignored_files')
        nnoremap <silent><buffer><expr> ..
        " 【..】 親ディレクトリに移動する
        \ defx#do_action('cd', ['..'])
        nnoremap <silent><buffer><expr> ~
        " 【~】 ホームディレクトリに移動する
        \ defx#do_action('cd')
        " 【ESC】 / 【q】 defx.nvimを終了する
        nnoremap <silent><buffer><expr> <Esc> 
        \ defx#do_action('quit')
        nnoremap <silent><buffer><expr> q
        \ defx#do_action('quit')
        " 【j】 カーソルを下に移動する
        nnoremap <silent><buffer><expr> j
        \ line('.') == line('$') ? 'gg' : 'j'
        " 【k】 カーソルを上に移動する
        nnoremap <silent><buffer><expr> k
        \ line('.') == 1 ? 'G' : 'k'
        " 【cd】 Neovim上のカレントディレクトリを変更する
        nnoremap <silent><buffer><expr> cd
        \ defx#do_action('change_vim_cwd')
  endfunction
'''

[[plugins]]
repo = "shougo/deol.nvim"
hook_add = '''
  " 【Ctrl + o】 float windowでターミナルを表示
  nnoremap <silent><C-o> :<C-u>Deol -split=floating<CR>
  " 【ESC】 ターミナルモードから抜ける
  tnoremap <ESC>   <C-\><C-n>
'''
